Pipeline Azure DevOps
Pipeline - Build

1 Pipeline 
Pipeline variables: 
access_token - $(System.AccessToken)  
dockerfile - (/#/?/%)
image - test-test
image_version - $(Build.BuildId)
registry - amazonaws.com
system.collectionId - 000000-0000-000
system.debug - false
system.definitionId - 0000
system.teamProject - test

2 Enable continuous integration
**CI - Enable continuous integration (yes)

3 Tasks 
Tasks:

Azure Repos Config:
echo $(System.AccessToken)
header="AUTHORIZATION: bearer $(System.AccessToken)" && \ 
git -c http.extraheader="$header" submodule sync && \
git -c http.extraheader="$header" submodule update --init --force --depth=1
    
Install Docker:
sudo apt-get update && \
sudo apt-get install ca-certificates curl gnupg  && \
sudo install -m 0755 -d /etc/apt/keyrings  && \
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg  && \
sudo chmod a+r /etc/apt/keyrings/docker.gpg  && \
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null  && \
sudo apt-get update  && \
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
cat /etc/resolv.conf && \
sudo sed -i "/#DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"/s/^#//" /etc/default/docker && \
sudo service docker restart

Publish ECR Repository:
Display name - Publish ECR Repository
AWS Credentials - N/A
AWS Region - N/A
Arguments - $(image_version) $(image) $(dockerfile) $(registry)
